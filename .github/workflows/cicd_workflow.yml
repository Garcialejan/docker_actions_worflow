name: CI/CD for Dockerized FastAPI app

# Trigger the workflow on any push to the main branch or pull request
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  builds-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    
    - name: Set up Python version
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi 
    
    - name: Test with pytest
      run: |
        pytest

build-and-publish:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
 
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v3

    - name: Loging to DockerHUB
      uses: docker/login-action@v2
      with:






#! Only to copy paste the template
# name: Python CI

# # Trigger the workflow on any push to the main branch or pull request
# on:
#   push:
#     branches:
#         # - main
#   pull_request:
#     branches:
#         # - main

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy: # To define strategies to execute variances od the defined jobs
#       fail-fast: false # No worries if one of them fails
#       matrix:
#         python-version: ["3.11", "3.12", "3.13"] # Try workflow in these python versions

#     steps:
#     # Step 1: check out the code from the repository
#     - name: Check out code
#       uses: actions/checkout@v4 # To copy the code from the repo

#     # Step 2: Create the python environment 
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ matrix.python-version }}

#     # Step 3: Install all the python dependencies
#     - name: Install dependencies
#       run: | # | Allows to write multiple commands in multiple lines. fi indicates the final of the if command
#         python -m pip install --upgrade pip
#         if [ -f requirements.txt ]; then
#             pip install -r requirements.txt
#         else
#             python -m pip install pandas pytest
#         fi 
#     # Step 4: Run tests
#     - name: Test with pytest
#       run: |
#         pytest 
#     # Rememeber to alocate the test files into the tests folder to run pytest